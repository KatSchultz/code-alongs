/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

*,
*::after,
*::before {
  margin: 0px;
  padding: 0px;
  box-sizing: inherit;
}

html {
  /* default is 16px */
  font-size: 62.5%;
}

/*EVERYTHING IN BODY WILL BE INHERITED BY CHILDREN
BETTER THAN PUTTING EVERYTHING IN * SELECTOR*/
body {
  box-sizing: border-box;
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.header {
  height: 95vh;
  /* USE BACKGROUND IMAGE FOR GRADIENTS 
  CAN USE MULTIPLE IMAGES, JUST USE A COMMA
  TOP IMAGE COMES FIRST*/
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  /*POSITION OF ABSOLUTE ITEM IS RELATIVE TO PARENT ELEMENT WITH
    POSITION SET TO RELATIVE*/
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  /* width will scale according to height */
  height: 3.5rem;
}
.header__logo-box:hover > .header__logo {
  animation: moveInRight 1s ease-out;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-iteration-count: 3; */
  /* animation-delay: 2s; */
}
.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;

  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  /* 0% is start */
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  70% {
    transform: translateX(1rem);
  }

  /* 100% is finish */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* 0% is start */
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  70% {
    transform: translateX(-1rem);
  }

  /* 100% is finish */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  /* active means on click */
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: white;
  color: #777;
}

.btn::after {
  /* creating an element that lives behind the btn element */
  /* must specify content property for after element to appear on page  */
  /* treated like a child of btn element */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* must make button position:relative so after element sees it as most closest relative parent */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

@keyframes moveInBottom {
  /* 0% is start */
  0% {
    opacity: 0;
    transform: translateY(20px);
  }

  /* 100% is finish */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
.btn--animated {
  /* .75s is animation delay  */
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards; /*this keeps element in animation start state until the delay begins animation */
}
